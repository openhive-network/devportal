# Generated by Scrape::ApiDefinitionsJob: 2018-09-25 01:15:43 UTC
# See: https://git.io/vx5CY
---
- name: :wallet_bridge_api
  description: 'Tutaj dodaj opis tego api...'
  
  methods:
 #ACCOUNT METHODS 
  - api_method: wallet_bridge_api.get_account
    purpose: |
      Returns information about the given account.

      **Parameters:**

        * `account`: account name

        | `Account` |
        |--------------------|---------------|-|
        | `"account-0"` | Return informations about 'account-0' |
        | `"non-exist-acc"` | Return null|
        | `""` | Return null |

    parameter_json: '{"account_name": "account-0"}'
   
    expected_response_json: |
      {
        "id": 6,
        "name": "account-0",
        "owner": {
          "weight_threshold": 1,
          "account_auths": [],
          "key_auths": [
            [
              "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
              1
            ]
          ]
        },
        "active": {
          "weight_threshold": 1,
          "account_auths": [],
          "key_auths": [
            [
              "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
              1
            ]
          ]
        },
        "posting": {
          "weight_threshold": 1,
          "account_auths": [],
          "key_auths": [
            [
              "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
              1
            ]
          ]
        },
        "memo_key": "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
        "json_metadata": "{}",
        "posting_json_metadata": "",
        "proxy": "",
        "previous_owner_update": "1970-01-01T00:00:00",
        "last_owner_update": "1970-01-01T00:00:00",
        "last_account_update": "1970-01-01T00:00:00",
        "created": "2022-03-28T05:52:03",
        "mined": false,
        "recovery_account": "initminer",
        "last_account_recovery": "1970-01-01T00:00:00",
        "reset_account": "null",
        "comment_count": 0,
        "lifetime_vote_count": 0,
        "post_count": 0,
        "can_vote": true,
        "voting_manabar": {
          "current_mana": 0,
          "last_update_time": 1648446723
        },
        "downvote_manabar": {
          "current_mana": 0,
          "last_update_time": 1648446723
        },
        "balance": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "savings_balance": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "hbd_balance": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000013"
        },
        "hbd_seconds": "0",
        "hbd_seconds_last_update": "1970-01-01T00:00:00",
        "hbd_last_interest_payment": "1970-01-01T00:00:00",
        "savings_hbd_balance": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000013"
        },
        "savings_hbd_seconds": "0",
        "savings_hbd_seconds_last_update": "1970-01-01T00:00:00",
        "savings_hbd_last_interest_payment": "1970-01-01T00:00:00",
        "savings_withdraw_requests": 0,
        "reward_hbd_balance": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000013"
        },
        "reward_hive_balance": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "reward_vesting_balance": {
          "amount": "0",
          "precision": 6,
          "nai": "@@000000037"
        },
        "reward_vesting_hive": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "vesting_shares": {
          "amount": "0",
          "precision": 6,
          "nai": "@@000000037"
        },
        "delegated_vesting_shares": {
          "amount": "0",
          "precision": 6,
          "nai": "@@000000037"
        },
        "received_vesting_shares": {
          "amount": "0",
          "precision": 6,
          "nai": "@@000000037"
        },
        "vesting_withdraw_rate": {
          "amount": "0",
          "precision": 6,
          "nai": "@@000000037"
        },
        "post_voting_power": {
          "amount": "0",
          "precision": 6,
          "nai": "@@000000037"
        },
        "next_vesting_withdrawal": "1969-12-31T23:59:59",
        "withdrawn": 0,
        "to_withdraw": 0,
        "withdraw_routes": 0,
        "pending_transfers": 0,
        "curation_rewards": 0,
        "posting_rewards": 0,
        "proxied_vsf_votes": [
          0,
          0,
          0,
          0
        ],
        "witnesses_voted_for": 0,
        "last_post": "1970-01-01T00:00:00",
        "last_root_post": "1970-01-01T00:00:00",
        "last_post_edit": "1970-01-01T00:00:00",
        "last_vote_time": "1970-01-01T00:00:00",
        "post_bandwidth": 0,
        "pending_claimed_accounts": 0,
        "open_recurrent_transfers": 0,
        "is_smt": false,
        "delayed_votes": [],
        "governance_vote_expiration_ts": "1969-12-31T23:59:59"
      }
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_account", "params": ["account-0"]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'
      
      
      
  - api_method: wallet_bridge_api.get_account_history
    purpose: |
      Returns a history of all operations for a given account.
      
      **Parameters:**
        
      * `account`: account name
      * `start:int`. e.g.: -1 for reverse history or any positive numeric
      * `limit:int` - up to 1000

      
        | `account` | `start` (int) | `limit` (int) | |
        |--------------------|---------------|---------------|-|
        | `"account-0"` | `4294967295` | `1000` | Queries the account named `account-0` starting on the 4294967295 item, up to 1,000 results. |
        | `"account-0"` | `2` | `1000` | Queries the account named `account-0` starting on the 2 item, up to 1,000 results. |
        | `"account-0"` | `-1` | `1000` | Queries the account named `account-0` starting on the oldest item in history, up to 1,000 results. |
        | `"account-0"` | `-1` | `1000` | Queries the account named `account-0` starting on the oldest item in history and 0 results |

    parameter_json: '{"params": [["account-0", -1, 1000]]}'
    expected_response_json: |
      {
        "history": [
          [
            0,
            {
              "trx_id": "68df3a0c43561a4b4bbe4a107ce046e2646388a2",
              "block": 2,
              "trx_in_block": 0,
              "op_in_trx": 0,
              "virtual_op": false,
              "timestamp": "2022-03-28T06:57:42",
              "op": {
                "type": "account_create_operation",
                "value": {
                  "fee": {
                    "amount": "0",
                    "precision": 3,
                    "nai": "@@000000021"
                  },
                  "creator": "initminer",
                  "new_account_name": "account-0",
                  "owner": {
                    "weight_threshold": 1,
                    "account_auths": [],
                    "key_auths": [
                      [
                        "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
                        1
                      ]
                    ]
                  },
                  "active": {
                    "weight_threshold": 1,
                    "account_auths": [],
                    "key_auths": [
                      [
                        "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
                        1
                      ]
                    ]
                  },
                  "posting": {
                    "weight_threshold": 1,
                    "account_auths": [],
                    "key_auths": [
                      [
                        "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
                        1
                      ]
                    ]
                  },
                  "memo_key": "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
                  "json_metadata": "{}"
                }
              },
              "operation_id": 0
            }
          ],
          [
            1,
            {
              "trx_id": "68df3a0c43561a4b4bbe4a107ce046e2646388a2",
              "block": 2,
              "trx_in_block": 0,
              "op_in_trx": 1,
              "virtual_op": true,
              "timestamp": "2022-03-28T06:57:42",
              "op": {
                "type": "account_created_operation",
                "value": {
                  "new_account_name": "account-0",
                  "creator": "initminer",
                  "initial_vesting_shares": {
                    "amount": "0",
                    "precision": 6,
                    "nai": "@@000000037"
                  },
                  "initial_delegation": {
                    "amount": "0",
                    "precision": 6,
                    "nai": "@@000000037"
                  }
                }
              },
              "operation_id": 0
            }
          ]
        ]
      }
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_account_history", "params": [["account-0", -1, 1000]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_accounts
    purpose: |
      Returns informations about the given accounts.
      
      **Parameters:**
        
      * `accounts`: array of account names

        | `Accounts` (account name) |
        |--------------------|---------------|-|
        | `"[account-0, account-1]"` | Return informations about 'account-0' and 'account-1' |
        | `"[non-exist-acc]"` | Return null|
        | `[""]` | Return null |

    parameter_json: '{"params": [["account-0", "account-1"]]}'
    expected_response_json: |
      [
        {
          "id": 6,
          "name": "account-0",
          "owner": {
            "weight_threshold": 1,
            "account_auths": [],
            "key_auths": [
              [
                "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
                1
              ]
            ]
          },
          "active": {
            "weight_threshold": 1,
            "account_auths": [],
            "key_auths": [
              [
                "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
                1
              ]
            ]
          },
          "posting": {
            "weight_threshold": 1,
            "account_auths": [],
            "key_auths": [
              [
                "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
                1
              ]
            ]
          },
          "memo_key": "TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor",
          "json_metadata": "{}",
          "posting_json_metadata": "",
          "proxy": "",
          "previous_owner_update": "1970-01-01T00:00:00",
          "last_owner_update": "1970-01-01T00:00:00",
          "last_account_update": "1970-01-01T00:00:00",
          "created": "2022-03-28T07:17:39",
          "mined": false,
          "recovery_account": "initminer",
          "last_account_recovery": "1970-01-01T00:00:00",
          "reset_account": "null",
          "comment_count": 0,
          "lifetime_vote_count": 0,
          "post_count": 0,
          "can_vote": true,
          "voting_manabar": {
            "current_mana": 0,
            "last_update_time": 1648451859
          },
          "downvote_manabar": {
            "current_mana": 0,
            "last_update_time": 1648451859
          },
          "balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "savings_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "hbd_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000013"
          },
          "hbd_seconds": "0",
          "hbd_seconds_last_update": "1970-01-01T00:00:00",
          "hbd_last_interest_payment": "1970-01-01T00:00:00",
          "savings_hbd_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000013"
          },
          "savings_hbd_seconds": "0",
          "savings_hbd_seconds_last_update": "1970-01-01T00:00:00",
          "savings_hbd_last_interest_payment": "1970-01-01T00:00:00",
          "savings_withdraw_requests": 0,
          "reward_hbd_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000013"
          },
          "reward_hive_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "reward_vesting_balance": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "reward_vesting_hive": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "vesting_shares": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "delegated_vesting_shares": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "received_vesting_shares": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "vesting_withdraw_rate": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "post_voting_power": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "next_vesting_withdrawal": "1969-12-31T23:59:59",
          "withdrawn": 0,
          "to_withdraw": 0,
          "withdraw_routes": 0,
          "pending_transfers": 0,
          "curation_rewards": 0,
          "posting_rewards": 0,
          "proxied_vsf_votes": [
            0,
            0,
            0,
            0
          ],
          "witnesses_voted_for": 0,
          "last_post": "1970-01-01T00:00:00",
          "last_root_post": "1970-01-01T00:00:00",
          "last_post_edit": "1970-01-01T00:00:00",
          "last_vote_time": "1970-01-01T00:00:00",
          "post_bandwidth": 0,
          "pending_claimed_accounts": 0,
          "open_recurrent_transfers": 0,
          "is_smt": false,
          "delayed_votes": [],
          "governance_vote_expiration_ts": "1969-12-31T23:59:59"
        },
        {
          "id": 7,
          "name": "account-1",
          "owner": {
            "weight_threshold": 1,
            "account_auths": [],
            "key_auths": [
              [
                "TST5hjCkhcMKcXQMppa97XUbDR5dWC3c2K8h23P1ajEi2fT9YuagW",
                1
              ]
            ]
          },
          "active": {
            "weight_threshold": 1,
            "account_auths": [],
            "key_auths": [
              [
                "TST5hjCkhcMKcXQMppa97XUbDR5dWC3c2K8h23P1ajEi2fT9YuagW",
                1
              ]
            ]
          },
          "posting": {
            "weight_threshold": 1,
            "account_auths": [],
            "key_auths": [
              [
                "TST5hjCkhcMKcXQMppa97XUbDR5dWC3c2K8h23P1ajEi2fT9YuagW",
                1
              ]
            ]
          },
          "memo_key": "TST5hjCkhcMKcXQMppa97XUbDR5dWC3c2K8h23P1ajEi2fT9YuagW",
          "json_metadata": "{}",
          "posting_json_metadata": "",
          "proxy": "",
          "previous_owner_update": "1970-01-01T00:00:00",
          "last_owner_update": "1970-01-01T00:00:00",
          "last_account_update": "1970-01-01T00:00:00",
          "created": "2022-03-28T07:17:39",
          "mined": false,
          "recovery_account": "initminer",
          "last_account_recovery": "1970-01-01T00:00:00",
          "reset_account": "null",
          "comment_count": 0,
          "lifetime_vote_count": 0,
          "post_count": 0,
          "can_vote": true,
          "voting_manabar": {
            "current_mana": 0,
            "last_update_time": 1648451859
          },
          "downvote_manabar": {
            "current_mana": 0,
            "last_update_time": 1648451859
          },
          "balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "savings_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "hbd_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000013"
          },
          "hbd_seconds": "0",
          "hbd_seconds_last_update": "1970-01-01T00:00:00",
          "hbd_last_interest_payment": "1970-01-01T00:00:00",
          "savings_hbd_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000013"
          },
          "savings_hbd_seconds": "0",
          "savings_hbd_seconds_last_update": "1970-01-01T00:00:00",
          "savings_hbd_last_interest_payment": "1970-01-01T00:00:00",
          "savings_withdraw_requests": 0,
          "reward_hbd_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000013"
          },
          "reward_hive_balance": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "reward_vesting_balance": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "reward_vesting_hive": {
            "amount": "0",
            "precision": 3,
            "nai": "@@000000021"
          },
          "vesting_shares": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "delegated_vesting_shares": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "received_vesting_shares": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "vesting_withdraw_rate": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "post_voting_power": {
            "amount": "0",
            "precision": 6,
            "nai": "@@000000037"
          },
          "next_vesting_withdrawal": "1969-12-31T23:59:59",
          "withdrawn": 0,
          "to_withdraw": 0,
          "withdraw_routes": 0,
          "pending_transfers": 0,
          "curation_rewards": 0,
          "posting_rewards": 0,
          "proxied_vsf_votes": [
            0,
            0,
            0,
            0
          ],
          "witnesses_voted_for": 0,
          "last_post": "1970-01-01T00:00:00",
          "last_root_post": "1970-01-01T00:00:00",
          "last_post_edit": "1970-01-01T00:00:00",
          "last_vote_time": "1970-01-01T00:00:00",
          "post_bandwidth": 0,
          "pending_claimed_accounts": 0,
          "open_recurrent_transfers": 0,
          "is_smt": false,
          "delayed_votes": [],
          "governance_vote_expiration_ts": "1969-12-31T23:59:59"
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_accounts", "params": [["account-0", "account-1"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.list_accounts
    purpose: |
      Return all existing accounts registered in blockchain ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account`: account name
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | `1000` | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'


  
  - api_method: wallet_bridge_api.list_my_accounts
    purpose: |
      Return accounts involved with specified keys.
      
      **Parameters:**
        
      * `keys`: array of keys

    parameter_json: '{"params": [["TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor", "TST5hjCkhcMKcXQMppa97XUbDR5dWC3c2K8h23P1ajEi2fT9YuagW", "TST5EjyFcCNidBSivAtTKvWWwWRNjakcRMB79QrbwMKprcTRBHtXz", "TST8RgQ3yexUZjcVGxQ2i3cKywwKwhxqzwtCHPQznGUYvQ15ZvahW", "TST77P1n96ojdXcKpd5BRUhVmk7qFTfM2q2UkWSKg63Xi7NKyK2Q1", "TST6qgHQx8jezjXvhVXSEhZ1zVUupsbtPJcWfLccT1drwJNyF9s2X", "TST5uznxkgkek1RQ13sthDWDqiUaE6sx4EfmPTcvLrZKBqETG47gP", "TST52ax8pDiPDnHKPBbb9j99Z3JzsnwYNAVWJb5W7haEGvPREdio3", "TST5S7tYwvBKWnNLETTxn4U8pc8e7m9MZ9GfZ3NPRz1LVPVbkcRDu", "TST5xXaMpWtv7bkTcSi9nvnCGb6vfHqaAdEAJGkWuFYWMnuYxq9Wf"]]}'
    expected_response_json: |
      {
        "accounts": [
          [
            "account-0"
          ],
          [
            "account-1"
          ],
          [
            "account-2"
          ],
          [
            "account-3"
          ],
          [
            "account-4"
          ],
          [
            "account-5"
          ],
          [
            "account-6"
          ],
          [
            "account-7"
          ],
          [
            "account-8"
          ],
          [
            "account-9"
          ]
        ]
      }
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_my_accounts", "params": [["TST6jACfK3P5xYFJQvavCwz5M8KR5EW3TcmSesArj9LJVGAq85qor", "TST5hjCkhcMKcXQMppa97XUbDR5dWC3c2K8h23P1ajEi2fT9YuagW", "TST5EjyFcCNidBSivAtTKvWWwWRNjakcRMB79QrbwMKprcTRBHtXz", "TST8RgQ3yexUZjcVGxQ2i3cKywwKwhxqzwtCHPQznGUYvQ15ZvahW", "TST77P1n96ojdXcKpd5BRUhVmk7qFTfM2q2UkWSKg63Xi7NKyK2Q1", "TST6qgHQx8jezjXvhVXSEhZ1zVUupsbtPJcWfLccT1drwJNyF9s2X", "TST5uznxkgkek1RQ13sthDWDqiUaE6sx4EfmPTcvLrZKBqETG47gP", "TST52ax8pDiPDnHKPBbb9j99Z3JzsnwYNAVWJb5W7haEGvPREdio3", "TST5S7tYwvBKWnNLETTxn4U8pc8e7m9MZ9GfZ3NPRz1LVPVbkcRDu", "TST5xXaMpWtv7bkTcSi9nvnCGb6vfHqaAdEAJGkWuFYWMnuYxq9Wf"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'


#OTHER METHODS
  - api_method: wallet_bridge_api.broadcast_transaction
    purpose: |
      The method used to broadcast a signed transaction to the p2p network so that witnesses could validate and include it in a block.      
      **Parameters:**
        
      * transaction

    parameter_json: '{"params": [
          [
            {
              "ref_block_num": 1,
              "ref_block_prefix": 2521816500,
              "expiration": "2022-04-14T10:16:03",
              "operations": [
                [
                  "account_create",
                  {
                    "fee": "0.000 TESTS",
                    "creator": "initminer",
                    "new_account_name": "alice",
                    "owner": {
                      "weight_threshold": 1,
                      "account_auths": [],
                      "key_auths": [
                        [
                          "TST5Xn9p5MWAvXucrtrdCRiXZAEu3MjoSESpPVxFBu9BsruY6DCvx",
                          1
                        ]
                      ]
                    },
                    "active": {
                      "weight_threshold": 1,
                      "account_auths": [],
                      "key_auths": [
                        [
                          "TST7X2ZPzxWkJop3erD5rMzg8fDAXKQ2wSDXSpnoQmE6WCCPbcdR2",
                          1
                        ]
                      ]
                    },
                    "posting": {
                      "weight_threshold": 1,
                      "account_auths": [],
                      "key_auths": [
                        [
                          "TST5pk6G16Kk84LS9KArZX1V6VjyjwJPa7NAStDB1wzaYBWzv976g",
                          1
                        ]
                      ]
                    },
                    "memo_key": "TST7nV6rgvGiNzsUZfQvE7uDwFJDVPH7PGLQrue3YsDmVD6CQLVuX",
                    "json_metadata": "{}"
                  }
                ]
              ],
              "extensions": [],
              "signatures": [
                "1f7b2efe2353827bf33f89ea62c1964e287e392407ac1ff8a718b1366c01d4cde8134673c36304f1fe47cb74c196613ef9e62d7581ad534be601a0a382629d724a"
              ],
              "transaction_id": "b98dc1ab6c1aced7d7a07214b31c0ab7330a784f",
              "block_num": 0,
              "transaction_num": 0
            },
            "additional_argument"
          ]
        ]
      }'
    expected_response_json: |
      {}
      
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.broadcast_transaction", "params": [[{"ref_block_num": 1, "ref_block_prefix": 2521816500, "expiration": "2022-04-14T10:16:03", "operations": [["account_create", {"fee": "0.000 TESTS", "creator": "initminer", "new_account_name": "alice", "owner": {"weight_threshold": 1, "account_auths": [], "key_auths": [["TST5Xn9p5MWAvXucrtrdCRiXZAEu3MjoSESpPVxFBu9BsruY6DCvx", 1]]}, "active": {"weight_threshold": 1, "account_auths": [], "key_auths": [["TST7X2ZPzxWkJop3erD5rMzg8fDAXKQ2wSDXSpnoQmE6WCCPbcdR2", 1]]}, "posting": {"weight_threshold": 1, "account_auths": [], "key_auths": [["TST5pk6G16Kk84LS9KArZX1V6VjyjwJPa7NAStDB1wzaYBWzv976g", 1]]}, "memo_key": "TST7nV6rgvGiNzsUZfQvE7uDwFJDVPH7PGLQrue3YsDmVD6CQLVuX", "json_metadata": "{}"}]], "extensions": [], "signatures": ["1f7b2efe2353827bf33f89ea62c1964e287e392407ac1ff8a718b1366c01d4cde8134673c36304f1fe47cb74c196613ef9e62d7581ad534be601a0a382629d724a"], "transaction_id": "b98dc1ab6c1aced7d7a07214b31c0ab7330a784f", "block_num": 0, "transaction_num": 0}, "additional_argument"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.broadcast_transaction_synchronus
    purpose: |
      Used to broadcast a transaction and waits for it to be processed synchronously.
      The method used to broadcast a signed transaction to the p2p network so that witnesses could validate and include it in a block. Broadcast waits to be processed synchronously. 

      
      **Parameters:**
        
      * transaction

      
    parameter_json: '{  "params": [
          [
            {
              "ref_block_num": 4,
              "ref_block_prefix": 2206165069,
              "expiration": "2022-04-14T12:00:03",
              "operations": [
                [
                  "account_create",
                  {
                    "fee": "0.000 TESTS",
                    "creator": "initminer",
                    "new_account_name": "alice",
                    "owner": {
                      "weight_threshold": 1,
                      "account_auths": [],
                      "key_auths": [
                        [
                          "TST6Y6jXc8NScXkFMXEHAJorYwm7gb2xVpzPbTp2UMBKKvkmnjGWd",
                          1
                        ]
                      ]
                    },
                    "active": {
                      "weight_threshold": 1,
                      "account_auths": [],
                      "key_auths": [
                        [
                          "TST5M47qBRzA5o3gW84Q3Vp19QuCSbRTqqr4ioUqjcHEgsLgvnNRc",
                          1
                        ]
                      ]
                    },
                    "posting": {
                      "weight_threshold": 1,
                      "account_auths": [],
                      "key_auths": [
                        [
                          "TST5ordMRoxxryhCeo7DRivS3Wfxmz2bdbcty9PPhQZ85ZnHUTrQc",
                          1
                        ]
                      ]
                    },
                    "memo_key": "TST8mMjiXhividBBfjQ9eiy323H4ktME6XMFgsej37B7W7ZSKND4e",
                    "json_metadata": "{}"
                  }
                ]
              ],
              "extensions": [],
              "signatures": [
                "1f50894636e136409f5772083ef905e835c45dd521692092cee15eadd8d14398383edd36ccf875d23ffca9aaeb465ea09d80a7e377d121c2bcb0a9bb0cf85347a4"
              ],
              "transaction_id": "3665a4691c33ffb474e3418f6e02437220fe9cc0",
              "block_num": 0,
              "transaction_num": 0
            }
          ]
        ]
      }'


    expected_response_json: |
      {
        "jsonrpc": "2.0",
        "result": {
          "id": "3665a4691c33ffb474e3418f6e02437220fe9cc0",
          "block_num": 6,
          "trx_num": 0,
          "expired": "False"
        },
        "id": 1
      }


    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.broadcast_transaction", "params": [[{"ref_block_num": 1, "ref_block_prefix": 2521816500, "expiration": "2022-04-14T10:16:03", "operations": [["account_create", {"fee": "0.000 TESTS", "creator": "initminer", "new_account_name": "alice", "owner": {"weight_threshold": 1, "account_auths": [], "key_auths": [["TST5Xn9p5MWAvXucrtrdCRiXZAEu3MjoSESpPVxFBu9BsruY6DCvx", 1]]}, "active": {"weight_threshold": 1, "account_auths": [], "key_auths": [["TST7X2ZPzxWkJop3erD5rMzg8fDAXKQ2wSDXSpnoQmE6WCCPbcdR2", 1]]}, "posting": {"weight_threshold": 1, "account_auths": [], "key_auths": [["TST5pk6G16Kk84LS9KArZX1V6VjyjwJPa7NAStDB1wzaYBWzv976g", 1]]}, "memo_key": "TST7nV6rgvGiNzsUZfQvE7uDwFJDVPH7PGLQrue3YsDmVD6CQLVuX", "json_metadata": "{}"}]], "extensions": [], "signatures": ["1f7b2efe2353827bf33f89ea62c1964e287e392407ac1ff8a718b1366c01d4cde8134673c36304f1fe47cb74c196613ef9e62d7581ad534be601a0a382629d724a"], "transaction_id": "b98dc1ab6c1aced7d7a07214b31c0ab7330a784f", "block_num": 0, "transaction_num": 0}, "additional_argument"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.find_recurrent_transfers
    purpose: |
      Finds transfers of any liquid asset every fixed amount of time from one account to another.
      
      Also see: [recurrent_transfer_operation]({{ '/apidefinitions/#broadcast_ops_recurrent_transfer' | relative_url }})


      **Parameters:**
        
      * `Account`: existing account name

    parameter_json: '{"params": [["alice"]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": [
            {
              "id": 0,
              "trigger_date": "2022-04-18T17:05:00",
              "from": "alice",
              "to": "bob",
              "amount": {
                "amount": "20000",
                "precision": 3,
                "nai": "@@000000021"
              },
              "memo": "memo",
              "recurrence": 100,
              "consecutive_failures": 0,
              "remaining_executions": 9
            }
          ],
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.find_recurrent_transfers", "params": [["alice"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_block
    purpose: |
     Returns the information about a block including its content
      
      **Parameters:**
        
      * `block_num`: int


    parameter_json: '{"params": [[1]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": {
            "block": {
              "previous": "0000000000000000000000000000000000000000",
              "timestamp": "2016-03-24T16:05:00",
              "witness": "initminer",
              "transaction_merkle_root": "0000000000000000000000000000000000000000",
              "extensions": [],
              "witness_signature": "204f8ad56a8f5cf722a02b035a61b500aa59b9519b2c33c77a80c0a714680a5a5a7a340d909d19996613c5e4ae92146b9add8a7a663eef37d837ef881477313043",
              "transactions": [],
              "block_id": "0000000109833ce528d5bbfb3f6225b39ee10086",
              "signing_key": "STM8GC13uCZbP44HzMLV6zPZGwVQ8Nt4Kji8PapsPiNq1BK153XTX",
              "transaction_ids": []
            }
          },
          "id": 1
        }
      ]

    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_block", "params": [[1]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_chain_properties
    purpose: |
      Returns informations about properties of blochchain.
      
      **Parameters:**
        
      * -

    parameter_json: '{"params": [[]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": {
            "account_creation_fee": {
              "amount": "3000",
              "precision": 3,
              "nai": "@@000000021"
            },
            "maximum_block_size": 65536,
            "hbd_interest_rate": 2000,
            "account_subsidy_budget": 797,
            "account_subsidy_decay": 347321
          },
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_chain_properties", "params": [[]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_collateralized_conversion_requests   # nie ma get_collateralized_conversion_requests
    purpose: |
      Returns objects corresponding with [collateralized_convert operations]({{ '/apidefinitions/#broadcast_ops_collateralized_convert' | relative_url }}) owned by specific account.

      **Parameters:**
        
      * `owner`: existing account name

    parameter_json: '{"params": [["alice"]]}'
    expected_response_json: |
      [
        {
          "id": 0,
          "owner": "alice",
          "requestid": 1650442592,
          "collateral_amount": {
            "amount": "10000",
            "precision": 3,
            "nai": "@@000000021"
          },
          "converted_amount": {
            "amount": "4761",
            "precision": 3,
            "nai": "@@000000013"
          },
          "conversion_date": "2022-04-23T20:16:33"
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_collateralized_conversion_requests", "params": [["alice"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_conversion_requests   # nie ma get_conversion_requests
    purpose: |
      Returns a list of [conversion requests]({{ '/glossary/#conversion-requests' | relative_url }}).

      Also see: [Convert HBD To HIVE]({{ 'tutorials-python/convert_hbd_to_hive' | relative_url }})

      **Parameters:**
        
      * `owner`: existing account name


    parameter_json: '{"params": [["alice"]]}'
    expected_response_json: |
      {
        "jsonrpc": "2.0",
        "result": [
          {
            "id": 0,
            "owner": "alice",
            "requestid": 1650443072,
            "amount": {
              "amount": "100",
              "precision": 3,
              "nai": "@@000000013"
            },
            "conversion_date": "2022-04-23T20:24:33"
          }
        ],
        "id": 1
      }
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_conversion_requests", "params": [["alice"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_current_median_history_price
    purpose: |
      Return the current median history prices proposed by witnesses.
      
      **Parameters:**
        
      * `-`


    parameter_json: '{"params": []}'
    expected_response_json: |
      {
        "jsonrpc": "2.0",
        "result": {
          "base": {
            "amount": "508",
            "precision": 3,
            "nai": "@@000000013"
          },
          "quote": {
            "amount": "1000",
            "precision": 3,
            "nai": "@@000000021"
          }
        },
        "id": 1
      }
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_current_median_history_price", "params": []}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_dynamic_global_properties
    purpose: |
      Returns the current dynamic global properties.  See: [Understanding
      Dynamic Global Properties]({{ '/tutorials-recipes/understanding-dynamic-global-properties.html' | relative_url }}).

      **Parameters:**
        
      * -


    parameter_json: '{"params": [[]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": {
            "id": 0,
            "head_block_number": 64481935,
            "head_block_id": "03d7ea8f32f5e430a31ed51b49ed142d922c5d4b",
            "time": "2022-05-18T12:29:30",
            "current_witness": "therealwolf",
            "total_pow": 514415,
            "num_pow_witnesses": 172,
            "virtual_supply": {
              "amount": "429969015551",
              "precision": 3,
              "nai": "@@000000021"
            },
            "current_supply": {
              "amount": "380999154975",
              "precision": 3,
              "nai": "@@000000021"
            },
            "init_hbd_supply": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "current_hbd_supply": {
              "amount": "24876689173",
              "precision": 3,
              "nai": "@@000000013"
            },
            "total_vesting_fund_hive": {
              "amount": "155682539020",
              "precision": 3,
              "nai": "@@000000021"
            },
            "total_vesting_shares": {
              "amount": "284875162576912602",
              "precision": 6,
              "nai": "@@000000037"
            },
            "total_reward_fund_hive": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000021"
            },
            "total_reward_shares2": "0",
            "pending_rewarded_vesting_shares": {
              "amount": "783573593562632",
              "precision": 6,
              "nai": "@@000000037"
            },
            "pending_rewarded_vesting_hive": {
              "amount": "404733550",
              "precision": 3,
              "nai": "@@000000021"
            },
            "hbd_interest_rate": 2000,
            "hbd_print_rate": 10000,
            "maximum_block_size": 65536,
            "required_actions_partition_percent": 0,
            "current_aslot": 64680590,
            "recent_slots_filled": "340282366920938463463374607431751434239",
            "participation_count": 127,
            "last_irreversible_block_num": 64481916,
            "vote_power_reserve_rate": 10,
            "delegation_return_period": 432000,
            "reverse_auction_seconds": 0,
            "available_account_subsidies": 7687433,
            "hbd_stop_percent": 1000,
            "hbd_start_percent": 900,
            "next_maintenance_time": "2022-05-18T12:34:12",
            "last_budget_time": "2022-05-18T11:34:12",
            "next_daily_maintenance_time": "2022-05-18T19:31:30",
            "content_reward_percent": 6500,
            "vesting_reward_percent": 1500,
            "sps_fund_percent": 1000,
            "sps_interval_ledger": {
              "amount": "164496",
              "precision": 3,
              "nai": "@@000000013"
            },
            "downvote_pool_percent": 2500,
            "current_remove_threshold": 200,
            "early_voting_seconds": 86400,
            "mid_voting_seconds": 172800,
            "max_consecutive_recurrent_transfer_failures": 10,
            "max_recurrent_transfer_end_date": 730,
            "min_recurrent_transfers_recurrence": 24,
            "max_open_recurrent_transfers": 255
          },
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_dynamic_global_properties", "params": [[]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_feed_history
    purpose: |
      Returns the history of [price feed]({{ '/glossary/#price-feed' | relative_url }}) values.
      
      **Parameters:**
        
      * -


    parameter_json: '{"params": [[]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": {
            "id": 0,
            "current_median_history": {
              "base": {
                "amount": "508",
                "precision": 3,
                "nai": "@@000000013"
              },
              "quote": {
                "amount": "1000",
                "precision": 3,
                "nai": "@@000000021"
              }
            },
            "market_median_history": {
              "base": {
                "amount": "508",
                "precision": 3,
                "nai": "@@000000013"
              },
              "quote": {
                "amount": "1000",
                "precision": 3,
                "nai": "@@000000021"
              }
            },
            "current_min_history": {
              "base": {
                "amount": "481",
                "precision": 3,
                "nai": "@@000000013"
              },
              "quote": {
                "amount": "1000",
                "precision": 3,
                "nai": "@@000000021"
              }
            },
            "current_max_history": {
              "base": {
                "amount": "549",
                "precision": 3,
                "nai": "@@000000013"
              },
              "quote": {
                "amount": "1000",
                "precision": 3,
                "nai": "@@000000021"
              }
            },
            "price_history": [
              {
                "base": {
                  "amount": "504",
                  "precision": 3,
                  "nai": "@@000000013"
                },
                "quote": {
                  "amount": "1000",
                  "precision": 3,
                  "nai": "@@000000021"
                }
              },
              {
                "base": {
                  "amount": "497",
                  "precision": 3,
                  "nai": "@@000000013"
                },
                "quote": {
                  "amount": "1000",
                  "precision": 3,
                  "nai": "@@000000021"
                }
              },
              {
                "base": {
                  "amount": "498",
                  "precision": 3,
                  "nai": "@@000000013"
                },
                "quote": {
                  "amount": "1000",
                  "precision": 3,
                  "nai": "@@000000021"
                }
              },
              {
                "base": {
                  "amount": "488",
                  "precision": 3,
                  "nai": "@@000000013"
                },
                "quote": {
                  "amount": "1000",
                  "precision": 3,
                  "nai": "@@000000021"
                }
              }
            ]
          },
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_feed_history", "params": [[]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_hardfork_version
    purpose: |
      Returns the current [hardfork]({{ '/glossary/#hardfork' | relative_url }}) version.
      
      **Parameters:**
        
      * `-`


    parameter_json: '{"params": []}'
    expected_response_json: |
      "1.26.0"

    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_hardfork_version", "params": []}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_open_orders   # nie ma otwartych orderów
    purpose: |
      Returns the open orders for HIVE:HBD for an account in the internal market.

      **Parameters:**
        
      * `account`: account name


    parameter_json: '{"params": [["alice"]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": [
            {
              "id": 0,
              "created": "2022-04-28T09:39:18",
              "expiration": "2022-04-28T09:55:57",
              "seller": "alice",
              "orderid": 1000,
              "for_sale": 1000,
              "sell_price": {
                "base": {
                  "amount": "1000",
                  "precision": 3,
                  "nai": "@@000000021"
                },
                "quote": {
                  "amount": "1000",
                  "precision": 3,
                  "nai": "@@000000013"
                }
              }
            }
          ],
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_open_orders", "params": [["alice"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_ops_in_block   # nie działa account_history_api_plugin
    purpose: |
      Returns sequence of operations included/generated in a specified block.
      
      **Parameters:**
        
      * `block_num`: int
      * `only_virtual`: boolean


    parameter_json: '{"params": [["10", true]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": {
            "ops": [
              {
                "trx_id": "0000000000000000000000000000000000000000",
                "block": 1,
                "trx_in_block": 0,
                "op_in_trx": 7,
                "virtual_op": true,
                "timestamp": "2016-01-01T00:00:00",
                "op": {
                  "type": "hardfork_operation",
                  "value": {
                    "hardfork_id": 1
                  }
                },
                "operation_id": 0
              },
              {
                "trx_id": "0000000000000000000000000000000000000000",
                "block": 1,
                "trx_in_block": 0,
                "op_in_trx": 8,
                "virtual_op": true,
                "timestamp": "2016-01-01T00:00:00",
                "op": {
                  "type": "hardfork_operation",
                  "value": {
                    "hardfork_id": 2
                  }
                },
                "operation_id": 0
              },
              {
                "trx_id": "0000000000000000000000000000000000000000",
                "block": 1,
                "trx_in_block": 4294967295,
                "op_in_trx": 5,
                "virtual_op": true,
                "timestamp": "2016-01-01T00:00:00",
                "op": {
                  "type": "account_created_operation",
                  "value": {
                    "new_account_name": "temp",
                    "creator": "",
                    "initial_vesting_shares": {
                      "amount": "0",
                      "precision": 6,
                      "nai": "@@000000037"
                    },
                    "initial_delegation": {
                      "amount": "0",
                      "precision": 6,
                      "nai": "@@000000037"
                    }
                  }
                },
                "operation_id": 0
              },
              {
                "trx_id": "0000000000000000000000000000000000000000",
                "block": 1,
                "trx_in_block": 4294967295,
                "op_in_trx": 6,
                "virtual_op": true,
                "timestamp": "2016-01-01T00:00:00",
                "op": {
                  "type": "account_created_operation",
                  "value": {
                    "new_account_name": "initminer",
                    "creator": "",
                    "initial_vesting_shares": {
                      "amount": "0",
                      "precision": 6,
                      "nai": "@@000000037"
                    },
                    "initial_delegation": {
                      "amount": "0",
                      "precision": 6,
                      "nai": "@@000000037"
                    }
                  }
                },
                "operation_id": 0
              }
            ]
          },
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_ops_in_block", "params": [[10, true]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_order_book    #  nie działa market_history_api_plugin
    purpose: |
      Returns the [order book]({{ '/glossary/#order-book' | relative_url }}) for HIVE:HBD.

      **Parameters:**
        
      * `orders_limit`: int


    parameter_json: '{"params": [[10]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": {
            "bids": [],
            "asks": [
              {
                "order_price": {
                  "base": {
                    "amount": "1000",
                    "precision": 3,
                    "nai": "@@000000021"
                  },
                  "quote": {
                    "amount": "1000",
                    "precision": 3,
                    "nai": "@@000000013"
                  }
                },
                "real_price": "1.00000000000000000",
                "hive": 1000,
                "hbd": 1000,
                "created": "2022-04-28T10:21:48"
              }
            ]
          },
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_order_book", "params": [[10]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_owner_history   #  zwracane jest zero
    purpose: |
      Returns the owner history of keys from last 30 days for an account.
      
      **Parameters:**
        
      * `account`: account name


    parameter_json: '{"params": [["alice"]]}'
    expected_response_json: |
      [
        {
          "jsonrpc": "2.0",
          "result": {
            "owner_auths": [
              {
                "id": 0,
                "account": "alice",
                "previous_owner_authority": {
                  "weight_threshold": 1,
                  "account_auths": [],
                  "key_auths": [
                    [
                      "TST6rC3o474xCi6RxrM8xa6FZxNhPer7QwKd6M55XDfnMDYLZomMp",
                      1
                    ]
                  ]
                },
                "last_valid_time": "2022-04-28T10:26:18"
              }
            ]
          },
          "id": 1
        }
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_owner_history", "params": [["alice"]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_reward_fund
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_transaction
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'


      
  - api_method: wallet_bridge_api.get_version
    purpose: |
      Returns the compile time versions of blockchain, hived, FC. Also returns the boot time version of the chain id (may be different from compile time value only when looking at a testnet).
      
      **Parameters:**
        
      * `-`


    parameter_json: '{"params": []}'
    expected_response_json: |
      {
        "blockchain_version": "1.26.0",
        "hive_revision": "f2e829a6a9a50f0e60e41e84e9ca4cbcdbf9d9af",
        "fc_revision": "f2e829a6a9a50f0e60e41e84e9ca4cbcdbf9d9af",
        "chain_id": "18dcf0a285365fc58b71f18b3d3fec954aa0c141c44e4e5cb4cf777b9eab274e"
      }
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.get_version", "params": []}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_withdraw_routes
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.is_known_transaction
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



#PROPOSALS METHODS
  - api_method: wallet_bridge_api.find_proposals
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.list_proposal_votes
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.list_proposals
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



#RC METHODS
  - api_method: wallet_bridge_api.find_rc_accounts
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.list_rc_accounts
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.list_rc_direct_delegations
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



#WITNESSES METHODS
  - api_method: wallet_bridge_api.get_active_witnesses
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_witness
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.get_witness_schedule
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'



  - api_method: wallet_bridge_api.list_witnesses
    purpose: |
      List accounts ordered alphabetically.
      
      **Parameters:**
        
      * `Lowerbound account: string`
      * `Limit: int` - in range (0-1000)

        | `Lowerbound account` (string) | `Limit` (int) |
        |--------------------|---------------|---------------|-|
        | `"account-5"` | `1000` | List alphabetically the accounts starting on the "account-5" with limit to 1,000 results. |
        | `"non-exist-acc"` | '1000' | List alphabetically the accounts starting next after "non-exist-acc" with a limit of 1,000 results. |
        | `""` | `1000` | List alphabetically all accounts with a limit of 1,000 results. |
        | `"account-5"` | `0` | List alphabetically the accounts starting on the "account-5" with limit to 0 results. |

    parameter_json: '{"params": [["account-5", 100]]}'
    expected_response_json: |
      [
        "account-5",
        "account-6",
        "account-7",
        "account-8",
        "account-9",
        "hive.fund",
        "initminer",
        "miners",
        "null",
        "steem.dao",
        "temp"
      ]
    curl_examples:
    - '{"jsonrpc": "2.0", "id": 1, "method": "wallet_bridge_api.list_accounts", "params": [["account-5", 100]]}'

    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-block-header)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-block-header)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/BlockApi)'







