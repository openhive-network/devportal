global:
  en: Английский
  es: Испанский
  hi: हिन्दी
  ru: Русский
  de: Немецкий
  fr: Французский
  zh: 汉语
Index: Hive
titles:
  portal: Портал Разработчиков
  home: Документация API
  api-def: Определения API
  introduction: Введение
  json_rpc_methods: JSON-RPC API
  tutorials: Обучение
  layer2: Слой 2
  resources: Ресурсы
  services: Возможности
  tools: Инструменты
  glossary: Словарь терминов
  search: Поиск
  quickstart: Быстрый старт
  welcome: Введение в Hive
  web2web3: Сравнение Web2 и Web3
  workflow: Рабочий процесс разработчика
  nodes: Hive Nodes
  accounts: Аккаунты
  authentication: Аутентификация
  sdk: Библиотеки SDK
  getset: Получить и установить
  testnet: Hive Testnet
  account_by_key_api: Account By Key API
  account_history_api: Account history API
  block_api: Block API
  bridge: Bridge
  condenser_api: Condenser API
  database_api: Database API
  debug_node_api: Debug Node API
  follow_api: Follow API
  json_rpc: JSON-RPC
  market_history_api: Market History API
  network_broadcast_api: Network Broadcast API
  rc_api: RC API
  reputation_api: Reputation API
  rewards_api: Rewards API
  tags_api: Tags API
  transaction_status_api: Transaction Status API
  witness_api: Witness API
  wallet_bridge_api: Wallet Bridge API
  broadcast_ops: Трансляция OPS
  broadcast_ops_custom: Трансляция OPS Настраиваемый
  condenser: Condenser
  vision: Vision
  imagehoster: ImageHoster
  videohoster: VideoHoster
  hivesigner: Hivesigner
  jussi: Jussi
  dhf: Фонд Hive
  hive_engine: Hive Engine
  honeycomb: HoneyComb
  vsc: VSC
  overview: Обзор
  whitepaper: Белая бумага
  hivesigner_libs: Hivesigner Libs
  hive_keychain: Hive Keychain
  community_help: Поддержка Dev
  chain_basics: Основы цепи
  governance: Руководство
  transactions: Транзакции
  api: API
  market: Рынок
  exchange_node: Узел для обмена
  clive: Hive командной строки
  docker: Docker
  tags: Теги
  get_transaction_node: Получить узел транзакции
  jussi_multiplexer: Использовать jussi как мультиплексор
  mira_performance_tuning: Настройка производительности MIRA
  monit: Управление узлом с использованием Monit
  node_cli: Параметры командной строки
  node_setup: Установки узла
  node_config: Конфигурация узла
  plug_and_api_list: Плагин и Список API
  seed_node: Семенной узел
  setting_up_testnet: Настройка Testnet
  using_hivemind: Использование Hivemind
  account_creation_process: Процесс создания учетной записи
  calculate_rc_recipe: Расчет затрат RC
  estimate_upvote: Подсчитать значение голоса "за"
  forum_market_bandwidth: Форум/пропускная способность рынка
  paginated_api_methods: Методы API с разбиением на страницы
  rc_bandwidth_parameters: Параметры пропускной способности RC
  rc_bandwidth_system: RC система передачи данных
  sso: Единый вход SSO
  understanding_configuration_values: Понимание значений конфигурации
  understanding_dynamic_props: Понимание динамических глобальных свойств
  understanding_transaction_status: Понимание статуса транзакции
  vest_to_hive: Конвертация VESTS в HIVE
  virtual_operations_streaming: Транзакции потока блокчейн
  account_reputation: Репутация аккаунта
  blog_feed: Блог Feed
  claim_rewards: Получить награду
  client_signing: Подписка клиента
  convert_hbd_to_hive: Конвертировать HBD в HIVE
  convert_hive_to_hbd: Превратить HIVE в HBD
  create_account: Создать Аккаунт
  delegate_power: Делегированная сила
  edit_content_patching: Редактировать патч содержимого
  follow_user: Подписаться на пользователя
  get_account_comments: Получить комментарии клиента
  get_account_replies: Получить ответы на вопросы клиента
  get_delegations_by_user: Получить делегатов от Пользователя
  get_follower_and_following: Список подписчиков и подписчиков
  get_post_comments: Получить комментарии к сообщениям
  get_post_details: Получить информацию о записи
  get_posts: Посты
  get_state_replacement: Получить API замены состояния
  get_voters_list: Получить список избирателей на пост
  getting_started: Начало работы
  grant_active_permission: Предоставить Активное Разрешение
  grant_posting_permission: Предоставить разрешение на публикацию
  power_down: Понижение силы
  power_up: Улучшить Hive силы
  reblogging_post: Репостнутый пост
  search_accounts: Поиск клиента
  search_tags: Поиск тегов
  set_withdraw_route: Установить маршрут вывода
  stream_blockchain_transactions: Транзакции потока блокчейн
  submit_comment_reply: Отправить ответ на комментарий
  submit_post: Опубликовать запись
  tic_tac_toe: Децентрализованная игра на Hive
  transfer_hive_and_hbd: Передача HIVE и HBD
  vote_on_content: Голосовать за контент
  witness_listing_and_voting: Список заверителей и голосование
  account_recovery: Восстановление аккаунта
  password_key_change: Изменение пароля ключа
  rc_dev: Руководство разработчика системы кредитования ресурсов
  transfer_hive_and_hbd_savings: Передача HIVE и HBD на сберегательный баланс
  using_keys_securely: Безопасное использование ключей
  how_to_serialize: Как сериализовать и подписывать Hive транзакции
  using_multisignature_accounts: Использование аккаунтов с мультиподписью
  round_trip: Круглая поездка
  javascript: Javascript
  python: Python
  ruby: Ruby
  php: PHP
  recipes: Рецепты
  node_operation: Операции с узлами
  haf_api: Setup HAF API node
  drone: Среднее По Drone
  witness_node: Узел свидетеля
  hiab_node: Узел в коробке
descriptions:
  jussi: Обратный прокси для отправки запросов json-rpc.
  node_config: Все настройки `config.ini` доступны для `hived`
  node_cli: Все опции, доступные для `hived` в интерфейсе командной строки cli_wallet
  clive: Интерактивное приложение командной строки для взаимодействия с улей
  plug_and_api_list: Запустите `hived` узел с вашими предпочитаемыми API
  haf_api: Настройка полноразмерных или светлых узлов Hive с помощью HAF API
  using_hivemind: Настройка Hivemind и API
  jussi_multiplexer: Оптимизировать ваши локальные приложения с помощью jussi
  drone: Слой кэширования API, замена Jussi
  monit: Использовать monit в качестве утилиты для управления и мониторинга хитов
  seed_node: Настройка сида узла
  node_setup: Прокрутите свой собственный узел Hive
  node_setup_desc: На этой странице вы можете найти руководства по настройке и настройке, которые помогут вам запустить и разместить собственный узел Hive Node.
  exchange_node: Настройка узла для бирж
  get_transaction_node: Настройка узла, поддерживающего `*.get_transaction`
  setting_up_testnet: Быстрый старт для установки тестовой сети, основанной на получении.
  tools: Каталог инструментов testnet сообщества
  hivesigner: _Понимание основ использования Hivesigner с вашим приложением Hive_
  api: Словарь терминов API
  chain_basics: Словарь базовых терминов Chain
  governance: Словарь терминов управления
  market: Словарь Рыночных Условий
  transactions: Словарь условий транзакции
  follow_user: _Следуйте и отписаться от пользователя / автора._
  get_account_comments: _Как получить комментарии аккаунта от цепи Hive blockchain._
  get_account_replies: _Получение ответов, написанных на конкретный аккаунт._
  power_up: _Power up the Hive аккаунта используя Hive Signer или клиентскую подпись._
  blog_feed: _Этот учебник показывает, как получить информацию о блогах от указанного автора, ограничиваясь пятью результатами._
  edit_content_patching: _Как патч редактирования поста в Hive._
  get_post_details: _Этот учебник извлекает содержимое одного сообщения и объясняет все данные, относящиеся к этому посту._
  vote_on_content: _Создать взвешенный голос вверх или вниз по комментарию/пост._
  getting_started: _Прежде чем взаимодействовать с блокчейном, мы начнем с презентации и настройки соответствующих библиотек._
  search_accounts: _Как вызвать список имен пользователей из Hive blockchain_
  account_recovery: _Как восстановить учетную запись при потере или изменении пароля._
  account_reputation: _Узнайте, как интерпретировать репутацию учетной записи._
  submit_post: _Этот пример будет транслировать новую запись в блокчейн, используя предоставленные значения._
  search_tags: _Выполнение поиска меток._
  claim_rewards: _Узнайте, как получить награды за невостребованный бонус с помощью Hive Signer и метода подписания клиента._
  convert_hbd_to_hive: _Как преобразовать HBD в HIVE для указанного аккаунта._
  convert_hive_to_hbd: _Как преобразовать HIVE в HBD для указанного аккаунта._
  stream_blockchain_transactions: _Как транслировать транзакции и операции из блокчейна Hive._
  get_follower_and_following: _Получить подписчиков от пользователя/автора и авторов, за которыми подписан пользователь._
  round_trip: _Использование Hive как личное 'хэш в Sky'_
  create_account: _Создать учётную запись Hive с помощью Hive Signer, а также с клиентской подписью._
  delegate_power: _Делегировать власть другим пользователям, использующим Hive Signer или клиентскую подпись._
  get_delegations_by_user: _Просмотр доверенных делегаций, сделанных пользователем, а также делегациями, срок действия которых истекает._
  get_state_replacement: _Это список вызовов API для замены каждого из различных _маршрутов_ из функции `getState`._
  get_voters_list: _По окончании этого урока вы узнаете, как получить список избирателей на любом содержании._
  get_post_comments: _Получить комментарии к каждому контенту или пост._
  grant_active_permission: _Как предоставить и отозвать активное разрешение другому пользователю._
  grant_posting_permission: _Как предоставить и отозвать разрешение на публикацию другому пользователю._
  power_down: _Выполнить заряд на всех VESTS или его части с помощью Hive Signer или клиентской подписи._
  reblogging_post: _Как переставить реблог на Hive_
  set_withdraw_route: _Установить маршруты к питанию или снятию аккаунта_
  submit_comment_reply: _Как оставить простой комментарий к Hive._
  tic_tac_toe: _Мы разработаем децентрализованную игру к концу этой серии._
  transfer_hive_and_hbd: _Передача HIVE и HBD с одного счета на другой._
  witness_voting_and_listing: _Создать список доступных свидетелей, а также проголосовать за и убрать голос за заверителя._
  get_posts: _Этот пример будет выводить сообщения в зависимости от того, какая категория предоставлена в качестве аргументов._
  using_keys_securely: _Узнайте, как библиотека Beem python обрабатывает подписание транзакций с помощью ключа пользователя Hive и как безопасно управлять вашими приватными ключами._
  password_key_change: _Как изменить пароль и ключи учетной записи._
  rc_dev: _Цель этого руководства - развеять как работают ресурсы и RC. Заметной аудиторией являются разработчики, работающие над пользовательскими интерфейсами, приложениями и клиентскими библиотеками._
  transfer_hive_and_hbd_savings: _Как перевести HIVE и HBD на сберегательный баланс._
  sso: _Логин без авторства._
  account_creation_process: _Методы создания новой учетной записи._
  calculate_rc_recipe: _Как рассчитать стоимость кредита ресурса для транзакций._
  estimate_upvote: _Расчет примерного значения голосов в Hive._
  forum_market_bandwidth: _Как интерпретировать необработанные данные пропускной способности._
  how_to_serialize: _Сериализация и подписание без дополнительных библиотек Hive Javascript._
  rc_bandwidth_parameters: _Анализ динамики ресурсного пула._
  rc_bandwidth_system: _Все о системе пропускной способности RC, полной перезаписи системы пропускной способности._
  understanding_dynamic_props: _Отображает информацию о глобальном состоянии_
  virtual_operations_streaming: _Включая виртуальные операции при потоковой транзакции блокчейн_
  vest_to_hive: _Как преобразовать VESTS в HIVE или HIVE POWER_
  understanding_configuration_values: _Константы блокчейна низкого уровня_
  understanding_transaction_status: _Как использовать API Hive для проверки состояния транзакции для данного значения `trx_id`._
  using_multisignature_accounts: _Как настроить и использовать учетные записи мультиподписи на Hive Blockchain._
  witness_node: Настройка узла консенсуса или свидетелей
  hiab_node: Dockerized, быстрый инструмент установки узла
  paginated_api_methods: _Запрос нескольких страниц результатов из API_
  client_signing: _Как подписать, проверить трансляцию локально на Hive_
  witness_listing_and_voting: _Получение свидетелей и голосование их_

